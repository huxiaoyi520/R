geom_boxplot() +
scale_fill_manual(values= c("#00AFBB", "#E7B800", "#FC4E07"))+
theme_bw() +
ggtitle("Submian: Box plot") +
theme(plot.background = element_blank(),
panel.background= element_blank(),
panel.grid.minor= element_blank(),
panel.grid.major.y= element_blank(),
axis.title = element_blank(),
axis.text = element_text(size = 10,colour="black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
#cairo_pdf(file="子母图.pdf",width=6.56,height=5.09)
#showtext.begin()
subvp <- viewport(x = 0.78, y = 0.38, width = 0.4, height = 0.5)
p1
print(p2, vp = subvp)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(ggpubr)
theme<-theme_minimal()+theme(
axis.title=element_text(size=14,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.text= element_text(size=12,face="plain",color="black"),
legend.title=element_text(size=12,face="plain",color="black"),
legend.background=element_rect(fill=NA,colour=NA)
)
ggscatterhist(
iris, x = "Sepal.Length", y = "Sepal.Width",  #iris
shape=21,color ="black",fill= "Species", size =3.5, alpha = 1,
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.plot =  "boxplot",
margin.params = list(fill = "Species", color = "black", size = 0.2),
legend = c(0.82,0.15),
ggtheme = theme)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(grid)
#library(Cairo)         #图片高清导出
library(showtext)
p1 <- ggplot(iris, aes(Sepal.Length, Sepal.Width, fill = Species)) +
geom_point(size = 4,shape=21,color="black") +
scale_fill_manual(values= c("#00AFBB", "#E7B800", "#FC4E07"))+
theme_minimal() +
xlim(4, 10) +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
p2 <- ggplot(iris, aes(Species, Sepal.Width, fill = Species)) +
geom_boxplot() +
scale_fill_manual(values= c("#00AFBB", "#E7B800", "#FC4E07"))+
theme_bw() +
ggtitle("Submian: Box plot") +
theme(plot.background = element_blank(),
panel.background= element_blank(),
panel.grid.minor= element_blank(),
panel.grid.major.y= element_blank(),
axis.title = element_blank(),
axis.text = element_text(size = 10,colour="black"),
plot.title = element_text(hjust = 0.5),
legend.position = "none")
#cairo_pdf(file="子母图.pdf",width=6.56,height=5.09)
#showtext.begin()
subvp <- viewport(x = 0.78, y = 0.38, width = 0.4, height = 0.5)
p1
print(p2, vp = subvp)
#showtext.end()
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
library(SuppDists) #提供rJohnson()函数
set.seed(141079)
# Generate sample data -------------------------------------------------------
findParams <- function(mu, sigma, skew, kurt) {
value <- .C("JohnsonMomentFitR", as.double(mu), as.double(sigma),
as.double(skew), as.double(kurt - 3), gamma = double(1),
delta = double(1), xi = double(1), lambda = double(1),
type = integer(1), PACKAGE = "SuppDists")
list(gamma = value$gamma, delta = value$delta,
xi = value$xi, lambda = value$lambda,
type = c("SN", "SL", "SU", "SB")[value$type])
}
# 均值为3，标准差为1的正态分布
n <- rnorm(100,3,1)
# Johnson分布的偏斜度2.2和峰度13
s <- rJohnson(100, findParams(3, 1, 2., 13.1))
# Johnson分布的偏斜度0和峰度20
k <- rJohnson(100, findParams(3, 1, 2.2, 20))
# 两个峰的均值μ1，μ2分别为1.89和3.79，σ1 = σ2 =0.31
mm <- rnorm(100, rep(c(2, 4), each = 50) * sqrt(0.9), sqrt(0.1))
mydata <- data.frame(
Class = factor(rep(c("n", "s", "k", "mm"), each = 100),
c("n", "s", "k", "mm")),
Value = c(n, s, k, mm)
)
#------------------------------------------图5-2-11 带显著性标签的箱型图(a)-----------------------------------------
library(ggpubr)
palette<-c(brewer.pal(7,"Set2")[c(1,2,4,5)])
ggboxplot(mydata, x = "Class", y = "Value",
fill = "Class", palette = palette,
add = "none",size=0.5,add.params = list(size = 0.25))+
geom_hline(yintercept = mean(mydata$Value), linetype = 2)+               #添加均值线
stat_compare_means(method = "anova", label.x=0.8,label.y = 7.8)+         # 添加全部数据的annova 方法的p-value
stat_compare_means(label = "p.signif", method = "t.test",
ref.group = ".all.", hide.ns = TRUE,label.y = 8) +     # 添加每组变量与全部数据的显著性
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.position="none"
)
#------------------------------------------Method1:图5-2-11 带显著性标签的箱型图(b)-----------------------------------------
compaired <- list(c("n", "s"),
c("n","k"),
c("n","mm"),
c("s","k"))
ggboxplot(mydata, x = "Class", y = "Value",
fill = "Class", palette = palette,
add = "jitter",size=0.5)+
stat_compare_means(comparisons = compaired,method = "wilcox.test")+ # 添加每两组变量的显著性
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.position="none"
)
ggplot(mydata, aes(Class, Value))+
geom_boxplot(aes(fill = Class),notch = FALSE,outlier.alpha  =1) +
scale_fill_manual(values=c(brewer.pal(7,"Set2")[c(1,2,4,5)]))+
geom_signif(comparisons = compaired,
step_increase = 0.1,
map_signif_level = F,
test = wilcox.test)+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.position="none"
)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
#---------------------------------------------Method1：图5-2-12 带连接线的双箱型图--------------------------------------------------------
library(ggpubr)
set.seed(141079)
data <- data.frame(BAI2013 = rnorm(60),
class = rep(rep(letters[1:3], each=10),2),
treatment = rep(c("elevated","ambient"),each=30),
index=rep(seq(1,30),2))
palette<-c(brewer.pal(7,"Set2")[c(1,2,4,5)])
ggpaired(data, x = "treatment", y = "BAI2013",
fill = "treatment", palette = palette,
line.color = "grey50", line.size = 0.15, point.size = 1.5,width=0.6,
facet.by = "class", short.panel.labs = FALSE)+
stat_compare_means(paired = TRUE)+
theme_minimal()+
theme(strip.background = element_rect(fill="grey90"),
strip.text = element_text(size=13,face="plain",color="black"),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=11,face="plain",color="black"),
panel.background=element_rect(colour="black",fill=NA),
panel.grid=element_blank(),
legend.position="none",
legend.background=element_rect(colour=NA,fill=NA),
axis.ticks=element_line(colour="black"))
library(RColorBrewer)
library(reshape2)
library(ggforce)
library(dplyr)
set.seed(141079)
df_point <- data.frame(BAI2013 = rnorm(60),
class = rep(rep(letters[1:3], each=10),2),
treatment = rep(c("elevated","ambient"),each=30),
index=rep(seq(1,30),2))
type<-as.character(unique(df_point$class))
df_bezier<-data.frame(matrix(ncol = 4, nrow = 0))
colnames(df_bezier)<-c("index","treatment","class","value")
for (i in 1:length(type)){
data0<-df_point[df_point$class==type[i],]
data1<-split(data0,data0$treatment)
data2<-data.frame(ambient=data1$ambient[,1],
elevated=data1$elevated[,1],
index=data1$ambient[,4])
colnames(data2)<-c(1,2,"index")
data2$'1.3'<-data2$'1'
data2$'1.7'<-data2$'2'
data3<-melt(data2,id="index",variable.name ="treatment")
data3$treatment<-as.numeric((as.character(data3$treatment)))
data4<-arrange(data3,index,treatment)
data4$class<-type[i]
df_bezier<-rbind(df_bezier,data4)
}
ggplot()+
geom_boxplot(data=df_point,aes(x = factor(treatment), y = BAI2013,fill=factor(treatment)),
width=0.35,position = position_dodge(0),size=0.5,outlier.size = 0) +
geom_point(data=df_point,aes(x = factor(treatment), y = BAI2013,fill=factor(treatment)),
shape=21,colour="black",size=2)+
#geom_line(data=df_point,aes(x = factor(treatment), y = BAI2013,group=index),
#           size=0.25,colour="grey20")+
geom_bezier(data=df_bezier,aes(x= treatment, y = value, group = index,linetype = 'cubic'),
size=0.25,colour="grey20") +
scale_fill_manual(values=brewer.pal(7,"Set2")[c(5,2)])+
facet_grid(.~class)+
labs(x="treatment",y="Value")+
theme_minimal()+
theme(strip.background = element_rect(fill="grey90"),
strip.text = element_text(size=15,face="plain",color="black"),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=11,face="plain",color="black"),
panel.background=element_rect(colour="black",fill=NA),
panel.grid.minor=element_blank(),
legend.position="none",
legend.background=element_rect(colour=NA,fill=NA),
axis.ticks=element_line(colour="black"))
ggpaired(data, x = "treatment", y = "BAI2013",
fill = "treatment", palette = palette,
line.color = "grey50", line.size = 0.15, point.size = 1.5,width=0.6,
facet.by = "class", short.panel.labs = FALSE)+
stat_compare_means(paired = TRUE)+
theme_minimal()+
theme(strip.background = element_rect(fill="grey90"),
strip.text = element_text(size=13,face="plain",color="black"),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=11,face="plain",color="black"),
panel.background=element_rect(colour="black",fill=NA),
panel.grid=element_blank(),
legend.position="none",
legend.background=element_rect(colour=NA,fill=NA),
axis.ticks=element_line(colour="black"))
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
library(SuppDists) #提供rJohnson()函数
set.seed(141079)
# Generate sample data -------------------------------------------------------
findParams <- function(mu, sigma, skew, kurt) {
value <- .C("JohnsonMomentFitR", as.double(mu), as.double(sigma),
as.double(skew), as.double(kurt - 3), gamma = double(1),
delta = double(1), xi = double(1), lambda = double(1),
type = integer(1), PACKAGE = "SuppDists")
list(gamma = value$gamma, delta = value$delta,
xi = value$xi, lambda = value$lambda,
type = c("SN", "SL", "SU", "SB")[value$type])
}
# 均值为3，标准差为1的正态分布
n <- rnorm(100,8,1)
# Johnson分布的偏斜度2.2和峰度13
s <- rJohnson(100, findParams(4, 1, 2., 13.1))
# Johnson分布的偏斜度0和峰度20
k <- rJohnson(100, findParams(10, 1, 2.2, 20))
# 两个峰的均值μ1，μ2分别为1.89和3.79，σ1 = σ2 =0.31
mm <- rnorm(100, rep(c(2, 4), each = 50) * sqrt(0.9), sqrt(0.1))
mydata <- data.frame(
Class = factor(rep(c("n", "s", "k", "mm"), each = 100),
c("n", "s", "k", "mm")),
Value = c(n, s, k, mm)
)
#write.csv(mydata,'Boxplot_Sort_Data.csv')
#--------------------------------未排序----------------------------------------------------
ggplot(mydata, aes(Class,Value))+
geom_boxplot(aes(fill = Class),notch = FALSE,outlier.alpha  =1) +
scale_fill_manual(values=c(brewer.pal(7,"Set2")[c(1,2,4,5)]))+
scale_y_continuous(breaks=seq(0,15,3))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.position="none"
)
#------------------------------降序序处理-------------------------------------------------------
Order_Class<-with(mydata,reorder(Class,Value,median))
Order_Class<-factor(Order_Class,levels=rev(levels(Order_Class)))
ggplot(mydata, aes(Order_Class,Value))+
geom_boxplot(aes(fill = Class),notch = FALSE,outlier.alpha  =1) +
scale_fill_manual(values=c(brewer.pal(7,"Set2")[c(1,2,4,5)]))+
scale_y_continuous(breaks=seq(0,15,3))+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.position="none"
)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
colormap<- rev(brewer.pal(11,'Spectral'))
# Create normally distributed data for plotting
x1 <- rnorm(mean=1.5, 5000)
y1 <- rnorm(mean=1.6, 5000)
x2 <- rnorm(mean=2.5, 5000)
y2 <- rnorm(mean=2.2, 5000)
x<-c(x1,x2)
y<-c(y1,y2)
df <- data.frame(x,y)
#--------------------------图5-3-1 不同类型的二维统计直方图------------------
ggplot(df, aes(x,y))+
stat_bin2d(bins=40) + scale_fill_gradientn(colours=colormap)+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
#panel.grid.major = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
#panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
#text=element_text(size=15),
#plot.title=element_text(size=15,family="myfont",hjust=.5),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.position="right"
)
# Log scaling
ggplot(df, aes(x,y))+
stat_binhex(bins=40) + scale_fill_gradientn(colours=colormap)+
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
#panel.grid.major = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
#panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
#text=element_text(size=15),
#plot.title=element_text(size=15,family="myfont",hjust=.5),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.position="right"
)
# 读入数据和加载包
#data <-read.csv('d:\\data.csv',T)
library(ggplot2)
library(ellipse)
library(gridExtra)
library(plyr)
#library(ReadImages)
library(RColorBrewer)
Colormap <- colorRampPalette(rev(brewer.pal(11,'Spectral')))(32)
N<-300
x1 <- rnorm(mean=1.5, N)
y1 <- rnorm(mean=1.6, N)
x2 <- rnorm(mean=2.5, N)
y2 <- rnorm(mean=2.2, N)
data <- data.frame(x=c(x1,x2),y=c(y1,y2))
#-------------------------二维直方图+一维直方图------------------------------------------------------------
# 绘制上边的直方图，并将各种标注去除
hist_top <- ggplot()+
geom_histogram(aes(data$x),colour='black',fill='#5E4FA2',binwidth = 0.3)+
theme(panel.background=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.line=element_blank())
# 同样绘制右边的直方图
hist_right <- ggplot()+
geom_histogram(aes(data$y),colour='black',fill='#5E4FA2',binwidth = 0.3)+
theme(panel.background=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.line=element_blank())+
coord_flip()
#ggplot(diamonds, aes(carat, price))
scatter<-ggplot(data, aes(x,y)) +
stat_binhex(bins = 15,na.rm=TRUE,color="black")+#colour="black",
scale_fill_gradientn(colours=Colormap)+#, trans="log"
#geom_point(colour="white",size=1,shape=21) +
theme_classic()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
#panel.grid.major = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
#panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
#text=element_text(size=15),
#plot.title=element_text(size=15,family="myfont",hjust=.5),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.position=c(0.10,0.80),
legend.background=element_blank()
)
# 最终的组合
grid.arrange(hist_top, empty, scatter, hist_right, ncol=2, nrow=2, widths=c(4,1), heights=c(1,4))
#----------------------------二维核密度估计图+一维核密度估计图--------------------------
# 绘制上边的直方图，并将各种标注去除
hist_top <- ggplot(data, aes(x)) +
geom_density(colour="black",fill='#5E4FA2',size=0.25)+
theme_void()
# 同样绘制右边的直方图
hist_right <- ggplot(data, aes(y)) +
geom_density(colour="black",fill='#5E4FA2',size=0.25)+
theme_void()+
coord_flip()
scatter<-ggplot(data, aes(x, y)) +
stat_density2d(geom ="polygon",aes(fill = ..level..),bins=30 )+#alpha=..level..,aes( fill=..level..), size=2, bins=10, geom="polygon") +
scale_fill_gradientn(colours=Colormap)+#, trans="log"
#geom_point(size=1) +
theme_minimal()+
theme(panel.background=element_rect(fill="white",colour="black",size=0.25),
#panel.grid.major = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
#panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
#text=element_text(size=15),
#plot.title=element_text(size=15,family="myfont",hjust=.5),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.position=c(0.9,0.22),
legend.background=element_blank()
)
# 最终的组合
grid.arrange(hist_top, empty, scatter, hist_right, ncol=2, nrow=2, widths=c(4,1), heights=c(1,4))
library(plot3D)
N<-300
x1 <- rnorm(mean=1.5, N)
y1 <- rnorm(mean=1.6, N)
x2 <- rnorm(mean=2.5, N)
y2 <- rnorm(mean=2.2, N)
data <- data.frame(x=c(x1,x2),y=c(y1,y2))
#图5-3-3 (a) 三维统计直方图
library(gplots) #提供hist2d()函数
df_hist<-hist2d(df$x,df$y, nbins=30)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1))
hist3D(x=df_hist$x,y=df_hist$y,z=df_hist$counts,
col = colormap, border = "black",space=0,alpha = 1,lwd=0.1,
xlab = "x", ylab = "y",zlab = "Count", clab="Count",
ticktype = "detailed",bty = "f",box = TRUE,#cex.axis= 1e-09,
theta = 65, phi = 20, d=3,
colkey = list(length = 0.5, width = 1))
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
#-----------------------------------------------(a1)-------------------------------------------
df<-read.csv("Population_Pyramid_Data.csv",header=TRUE)
df[df$gender == "female",]$pop<--df[df$gender == "female",]$pop
df$age<-factor(df$age,levels=df$age[seq(1,nrow(df)/2,1)])
ggplot(data = df, aes(x =age , y = pop, fill = gender)) +
geom_bar(stat = "identity",position = "identity",color="black",size=0.25) +
scale_y_continuous(labels = abs, limits = c(-400, 400), breaks = seq(-400, 400, 100)) +
coord_flip() +
theme_light()+
theme(
#axis.text.x = element_text(angle=60, hjust=1),
panel.grid.minor=element_blank(),
#text=element_text(size=15,face="plain",color="black"),
axis.title=element_text(size=15,face="plain",color="black"),
axis.text = element_text(size=10,face="plain",color="black"),
legend.title=element_text(size=14,face="plain",color="black"),
legend.text=element_text(size=12,face="plain",color="black"),
legend.background=element_blank(),
legend.position = c(0.9,0.88)
)
ggplot(data = df, aes(x =age , y = pop, fill = gender)) +
geom_bar(stat = "identity",position = "identity",color="black",size=0.25) +
scale_y_continuous(labels = abs, limits = c(-400, 400), breaks = seq(-400, 400, 100)) +
theme_light()+
theme(
axis.text.x = element_text(angle=60, hjust=1),
panel.grid.minor=element_blank(),
#text=element_text(size=15,face="plain",color="black"),
axis.title=element_text(size=15,face="plain",color="black"),
axis.text = element_text(size=10,face="plain",color="black"),
legend.title=element_text(size=14,face="plain",color="black"),
legend.text=element_text(size=12,face="plain",color="black"),
legend.background=element_blank(),
legend.position = c(0.9,0.88)
)
#-------------------------------------------(b1)--------------------------------------------------------
#df<-read.csv("Population_Pyramid_Data.csv",header=TRUE)
#df[df$gender == "female",]$pop<--df[df$gender == "female",]$pop
df$age_x<-rep(seq(0, 100,5),2)
ggplot(data = df, aes(x =age_x , y = pop, fill = gender)) +
geom_area(stat = "identity", position = "identity",color="black",size=0.25) +
scale_fill_manual(values=c("#36BED9","#FBAD01"))+
coord_flip() +
scale_y_continuous(labels = abs, limits = c(-400, 400), breaks = seq(-400, 400, 100)) +
scale_x_continuous(breaks = seq(0, 100, 5),labels=df$age[seq(1,nrow(df)/2,1)])+
theme_light()+
theme(
panel.grid.minor=element_blank(),
#text=element_text(size=15,face="plain",color="black"),
axis.title=element_text(size=15,face="plain",color="black"),
axis.text = element_text(size=10,face="plain",color="black"),
legend.title=element_text(size=14,face="plain",color="black"),
legend.text=element_text(size=12,face="plain",color="black"),
legend.background=element_blank(),
legend.position = c(0.9,0.88)
)
#-------------------------------------------(b2)------------------------------------------------------------------
ggplot(data = df, aes(x =age_x , y = pop, fill = gender)) +
geom_area(stat = "identity", position = "identity",color="black",size=0.25) +
scale_fill_manual(values=c("#36BED9","#FBAD01"))+
#coord_flip() +
scale_y_continuous(labels = abs, limits = c(-400, 400), breaks = seq(-400, 400, 100)) +
scale_x_continuous(breaks = seq(0, 100, 5),labels=df$age[seq(1,nrow(df)/2,1)])+
theme_light()+
theme(
axis.text.x = element_text(angle=60, hjust=1),
panel.grid.minor=element_blank(),
#text=element_text(size=15,face="plain",color="black"),
axis.title=element_text(size=15,face="plain",color="black"),
axis.text = element_text(size=10,face="plain",color="black"),
legend.title=element_text(size=14,face="plain",color="black"),
legend.text=element_text(size=12,face="plain",color="black"),
legend.background=element_blank(),
legend.position = c(0.9,0.88)
)
