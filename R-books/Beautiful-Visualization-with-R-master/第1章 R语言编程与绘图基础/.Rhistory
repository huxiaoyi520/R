alpha=0.8)
library(gridExtra)
grid.arrange(p3,p4, ncol = 2, nrow =1)
library(gridExtra)
grid.arrange(p1,p2,p3,p4, ncol = 2, nrow =2)
library(ggplot2)
library(RColorBrewer)
df<-read.csv("Facet_Data.csv", header = TRUE)
p1<-ggplot(df, aes(x=SOD,y=tau,size=age)) +
geom_point(shape=21,color="black",fill="#E53F2F",stroke=0.25,alpha=0.8)+
scale_size(range = c(1, 8))
p2<-ggplot(df, aes(SOD,tau,fill=age,size=age)) +
geom_point(shape=21,colour="black",stroke=0.25,
alpha=0.8)+
scale_size(range = c(1, 8))+
scale_fill_distiller(palette="Reds")
p3<-ggplot(df, aes(x=SOD,y=tau,fill=Class,shape=Class)) +
geom_point(size=3,colour="black",stroke=0.25)+
scale_fill_manual(values=c("#36BED9","#FF0000","#FBAD01"))+
scale_shape_manual(values=c(21,22,23))
p4<-ggplot(df, aes(SOD,tau,fill=Class,size=age)) +
geom_point(shape=21,colour="black",stroke=0.25,
alpha=0.8) +
scale_fill_manual(values=c("#36BED9","#FF0000","#FBAD01"))+
scale_size(range = c(1, 8))
library(gridExtra)
grid.arrange(p1,p2,p3,p4, ncol = 2, nrow =2)
library(ggplot2)
df<-read.csv("Facet_Data.csv", header = TRUE)
#-------------------------------Size---------------------------
ggplot(df, aes(SOD,tau,fill=Class,size=age)) +
geom_point(shape=21,colour="black",stroke=0.25) +
scale_fill_manual(values=brewer.pal(7,'Spectral')[c(2,4,3)])+
scale_size(range = c(1, 10))+
theme_light()+
theme(
text=element_text(size=14,color="black"),
plot.title=element_text(size=14,family="myfont",face="bold.italic",hjust=.5,color="black"),
legend.background = element_blank(),
legend.position="right"
)
#-------------------------------shape----------------
ggplot(df, aes(x=SOD,y=tau,shape=Class,fill=Class)) +
geom_point(size=3,colour="black",stroke=0.25) +
scale_shape_manual(values=c(21,22,23))+
#scale_fill_manual(values=colors0)+
theme_light()+
theme(
text=element_text(size=14,color="black"),
plot.title=element_text(size=14,family="myfont",face="bold.italic",hjust=.5,color="black"),
legend.background = element_blank(),
legend.position=c(0.85,0.15)
)
library(RColorBrewer)
ggplot(df, aes(x=SOD,y=tau,fill=Class)) +
geom_point(size=4,shape=21,colour="black",stroke=0.25) +
scale_fill_manual(values=brewer.pal(7,'Set1')[c(1,2,3)])+
theme_light()+
theme(
text=element_text(size=14,color="black"),
plot.title=element_text(size=14,family="myfont",face="bold.italic",hjust=.5,color="black"),
legend.background = element_blank(),
legend.position=c(0.85,0.15)
)
ggplot(df, aes(x=SOD,y=tau,fill=Class)) +
geom_point(size=4,shape=21,colour="black",stroke=0.25) +
scale_fill_manual(values=c("red","blue","green"))+
theme_light()+
theme(
text=element_text(size=14,color="black"),
plot.title=element_text(size=14,family="myfont",face="bold.italic",hjust=.5,color="black"),
legend.background = element_blank(),
legend.position=c(0.85,0.15)
)
ggplot(Alz, aes(x = tau, y = SOD, fill=age, size = age)) +
geom_point(shape=21,colour="black",alpha=0.95) +
scale_fill_distiller(palette="Blues")+
#scale_fill_gradient2(low="#00A08A",mid="white",high="#FF0000",midpoint = mean(Alz$age))+
theme(
strip.text = element_text(size=13,face="plain",color="black"),
text=element_text(size=12,face="plain",color="black"),
axis.title=element_text(size=14,face="plain",color="black"),
axis.text = element_text(size=11,face="plain",color="black"),
#legend.position=c(0.935,0.13),
legend.background = element_rect(fill=alpha("white",0))
)
ggplot(df, aes(x = tau, y = SOD, fill=age, size = age)) +
geom_point(shape=21,colour="black",alpha=0.95) +
scale_fill_distiller(palette="Blues")+
#scale_fill_gradient2(low="#00A08A",mid="white",high="#FF0000",midpoint = mean(Alz$age))+
theme(
strip.text = element_text(size=13,face="plain",color="black"),
text=element_text(size=12,face="plain",color="black"),
axis.title=element_text(size=14,face="plain",color="black"),
axis.text = element_text(size=11,face="plain",color="black"),
#legend.position=c(0.935,0.13),
legend.background = element_rect(fill=alpha("white",0))
)
library(ggplot2)
df<-read.csv("Facet_Data.csv", header = TRUE)
#-------------------------------Size---------------------------
ggplot(df, aes(SOD,tau,fill=Class,size=age)) +
geom_point(shape=21,colour="black",stroke=0.25) +
scale_fill_manual(values=brewer.pal(7,'Spectral')[c(2,4,3)])+
scale_size(range = c(1, 10))+
theme_light()+
theme(
text=element_text(size=14,color="black"),
plot.title=element_text(size=14,family="myfont",face="bold.italic",hjust=.5,color="black"),
legend.background = element_blank(),
legend.position="right"
)
library(ggplot2)
df<-read.csv("Facet_Data.csv", header = TRUE)
ggplot(df, aes(SOD)) +
geom_histogram(colour="black",fill="red",bins=30)+
xlab("SOD")+
ylab("Count")+
theme_light()+
theme(
text=element_text(size=14,color="black"),
plot.title=element_text(size=14,family="myfont",face="bold.italic",hjust=.5,color="black"),
legend.background = element_blank()
)
ggplot(df, aes(x=SOD,y=tau)) +
geom_point(shape=21,color="black",
fill="red",size=3,stroke=0.1)+
theme_light()+
theme(
text=element_text(size=14,color="black"),
plot.title=element_text(size=14,family="myfont",face="bold.italic",hjust=.5,color="black"),
legend.background = element_blank()
)
library(wesanderson)
colors0 <- wes_palette(n=3, name="FantasticFox1")
ggplot(df, aes(x=SOD,y=tau,fill=Class)) +
geom_point(size=3,shape=21,colour="black",stroke=0.25) +
scale_fill_manual(values=colors0)+
theme_light()+
theme(
text=element_text(size=14,color="black"),
plot.title=element_text(size=14,family="myfont",face="bold.italic",hjust=.5,color="black"),
legend.background = element_blank(),
legend.position=c(0.85,0.15)
)
library(ggplot2)
N<-20
df1 <- data.frame(x=sort(rnorm(N)),y=sort(rnorm(N)))
df2 <- data.frame(x=df1$x+0.1*rnorm(N),y=df1$y+0.1*rnorm(N))
# 所有图层共享数据源和美学映射参数
ggplot(df1,aes(x,y,colour=x+y))+
geom_line(size=1)+
geom_point(shape=16,size=5)+
guides(color=guide_colorbar(title="Point\nLine"))
library(ggplot2)
library(RColorBrewer)
library(reshape2)
df<-read.csv("MappingAnalysis_Data.csv", header = TRUE)
#--------------------------------------color+shape---------------------------
ggplot(data=df, aes(x=Time,y=value,fill=variable,shape=variable)) +
geom_line()+
geom_point(size=4,colour="black") +
scale_fill_manual(values=c("#FF9641","#FF5B4E","#B887C3","#38C25D"))+
scale_shape_manual(values=c(21,22,23,24))+
scale_x_continuous(name="Time(d)",breaks=seq(0,20,2))+
scale_y_continuous(breaks=seq(0,90,10),limits=c(0,90),expand =c(0, 1))+
theme_classic()+
theme(
text=element_text(size=14,color="black"),
legend.background = element_rect(fill="white"),
legend.position="right"
)
#--------------------------------------color+shape---------------------------
ggplot(data=df, aes(x=Time,y=value,fill=variable,shape=variable)) +
geom_line()+
geom_point(size=4,colour="black") +
scale_fill_manual(values=c("#FF9641","#FF5B4E","#B887C3","#38C25D"))+
scale_shape_manual(values=c(21,22,23,24))+
scale_x_continuous(name="Time(d)",breaks=seq(0,20,2))+
scale_y_continuous(breaks=seq(0,90,10),limits=c(0,90),expand =c(0, 1))+
# theme_classic()+
theme(
text=element_text(size=14,color="black"),
legend.background = element_blank(),
legend.position=c(0.2,0.8)
)
ggplot(data=df, aes(x=Time,y=value,fill=variable,shape=variable)) +
geom_line()+
geom_point(size=4,colour="black") +
scale_fill_manual(values=c("#FF9641","#FF5B4E","#B887C3","#38C25D"))+
scale_shape_manual(values=c(21,22,23,24))+
scale_x_continuous(name="Time(d)",breaks=seq(0,20,2))+
scale_y_continuous(breaks=seq(0,90,10),limits=c(0,90),expand =c(0, 1))+
theme_classic()+
theme(
text=element_text(size=14,color="black"),
legend.background = element_blank(),
legend.position=c(0.2,0.8)
)
ggplot(data=df, aes(x=Time,y=value,fill=variable,shape=variable)) +
geom_line()+
geom_point(size=4,colour="black") +
scale_fill_manual(values=c("#FF9641","#FF5B4E","#B887C3","#38C25D"))+
scale_shape_manual(values=c(21,22,23,24))+
scale_x_continuous(name="Time(d)",breaks=seq(0,20,2))+
scale_y_continuous(breaks=seq(0,90,10),limits=c(0,90),expand =c(0, 1))+
theme_classic()+
theme(
text=element_text(size=14,color="black"),
legend.background = element_rect(fill="white"),
legend.position="right"
)
library(ggplot2)
library(Cairo)
library(showtext)
df <- expand.grid(x = seq(0,1,length.out = 4), y= seq(0,1,length.out = 3))
df$fontface <-rep(c("plain", "bold", "italic", "bold.italic"),3)
df$family<-rep(c("sans", "times",  "mono"),each=4)
df$label<-paste(df$family,"\n ",df$fontface)
#CairoPDF(file="字体图.pdf",width=4.67,height=4.36)
#showtext.begin()
ggplot(df, aes(x, y)) +
geom_text(aes(label = label, fontface = fontface,family=family),size = 4) +
xlim(-0.2,1.3)+
ylim(-0.2,1.2)
#showtext_end()
#dev.off()
library(ggplot2)
library(RColorBrewer)
library(reshape2)
df<-read.csv("MappingAnalysis_Data.csv", header = TRUE)
#--------------------------------------color+shape---------------------------
ggplot(data=df, aes(x=Time,y=value,fill=variable,shape=variable)) +
geom_line()+
geom_point(size=4,colour="black") +
scale_fill_manual(values=c("#FF9641","#FF5B4E","#B887C3","#38C25D"))+
scale_shape_manual(values=c(21,22,23,24))+
theme_classic()+
theme(
text=element_text(size=14,color="black"),
plot.title=element_text(size=14,family="myfont",face="bold.italic",hjust=.5,color="black"),
legend.background = element_blank(),
legend.position=c(0.2,0.8)
)
library(ggplot2)
df<-read.csv("Facet_Data.csv", header = TRUE)
#-------------------------------Size---------------------------
ggplot(df, aes(SOD,tau,fill=Class,size=age)) +
geom_point(shape=21,colour="black",stroke=0.25) +
scale_fill_manual(values=brewer.pal(7,'Spectral')[c(2,4,3)])+
scale_size(range = c(1, 10))+
theme_light()+
theme(
text=element_text(size=14,color="black"),
plot.title=element_text(size=14,family="myfont",face="bold.italic",hjust=.5,color="black"),
legend.background = element_blank(),
legend.position="right"
)
library(ggplot2)
df<-read.csv("PolarBar_Data.csv", header = TRUE)
ggplot(df,aes(Date,Value))+
geom_bar(stat = "identity", width = 10,colour="black",size=0.25,fill="#3BC8EB")+
scale_x_continuous(name="Time(day)",breaks=seq(0,360,30))+
scale_y_continuous(breaks=seq(0,160,20),limits=c(0,160),expand = expand_scale(add = 0))+
theme_classic()
ggplot(df,aes(Date,Value))+
geom_bar(stat = "identity", width = 10,colour="black",size=0.25,fill="#3BC8EB")+
scale_x_continuous(breaks=seq(0,360,30))+
scale_y_continuous(breaks=seq(0,115,30),limits=c(-30,115))+
coord_polar(theta = "x",start=0) +
theme_light()+
theme( panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey80",size=.25),
axis.text.y = element_text(size = 11,colour="black"),
axis.line.y = element_line(size=0.25),
axis.text.x=element_text(size = 11,colour="black"))
library(plot3D)
par(mfrow = c(1, 1))
panelfirst <- function(pmat) {
zmin <- min(-quakes$depth)
XY <- trans3D(quakes$long, quakes$lat,
z = rep(zmin, nrow(quakes)), pmat = pmat)
scatter2D(XY$x, XY$y, col = "black", pch = ".",
cex = 2, add = TRUE, colkey = FALSE)
xmin <- min(quakes$long)
XY <- trans3D(x = rep(xmin, nrow(quakes)), y = quakes$lat,
z = -quakes$depth, pmat = pmat)
scatter2D(XY$x, XY$y, col = "black", pch = ".",
cex = 2, add = TRUE, colkey = FALSE)
}
library(scales)
library(RColorBrewer)
library(fields)
colormap <- colorRampPalette(rev(brewer.pal(11,'RdYlGn')))(100)#
index <- ceiling(((prc <- 0.7 * quakes$mag/ diff(range(quakes$mag))) - min(prc) + 0.3)*100)
for (i in seq(1,length(index)) ){
prc[i]=colormap[index[i]]
}
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1))
with(quakes, scatter3D(x = long, y = lat, z = -depth, #bgvar = mag,
pch = 21, cex = 1.5,col="black",bg=prc,
xlab = "longitude", ylab = "latitude",
zlab = "depth, km",
ticktype = "detailed",#bty = "f",box = TRUE,
panel.first = panelfirst,
theta = 140, phi = 20, d=1.5,
colkey = FALSE)#list(length = 0.5, width = 0.5, cex.clab = 0.75))
)
colkey (col=colormap,clim=range(quakes$mag),clab = "Richter", add=TRUE, length=0.5,side = 4)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1))
with(quakes, scatter3D(x = long, y = lat, z = -depth, #bgvar = mag,
pch = 21, cex = 1.5,col="black",bg=prc,
xlab = "longitude", ylab = "latitude",
zlab = "depth, km",
ticktype = "detailed",bty = "f",box = TRUE,
panel.first = panelfirst,
theta = 140, phi = 20, d=3,
colkey = FALSE)#list(length = 0.5, width = 0.5, cex.clab = 0.75))
)
colkey (col=colormap,clim=range(quakes$mag),clab = "Richter", add=TRUE, length=0.5,side = 4)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1))
with(quakes, scatter3D(x = long, y = lat, z = -depth, #bgvar = mag,
pch = 21, cex = 1.5,col="black",bg=prc,
xlab = "longitude", ylab = "latitude",
zlab = "depth, km",
ticktype = "detailed",#bty = "f",box = TRUE,
panel.first = panelfirst,
theta = 140, phi = 20, d=30,
colkey = FALSE)#list(length = 0.5, width = 0.5, cex.clab = 0.75))
)
colkey (col=colormap,clim=range(quakes$mag),clab = "Richter", add=TRUE, length=0.5,side = 4)
library(ggplot2)
library(wesanderson)
ggplot(iris,aes(Sepal.Length, Petal.Length, fill= Species))+
geom_point(size=3.5,shape=21,colour="black") +
scale_fill_manual(values=wes_palette(n=3, name="Darjeeling1"))+
theme_light()
ggplot(iris,aes(Sepal.Length, Petal.Length, fill= Species))+
geom_point(size=3.5,shape=21,colour="black") +
scale_fill_manual(values=wes_palette(n=3, name="Darjeeling1"))+
theme_minimal()
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
color_theme<-brewer.pal(7,"Set2")[c(1,2,4,5)]
mydata<-read.csv("Boxplot_Data.csv",stringsAsFactors=FALSE)
ggplot(mydata, aes(Class, Value))+
geom_boxplot(aes(fill = Class),size=0.25) +
geom_jitter(width=0.2,size=1.)+
#geom_dotplot(aes(fill = Class),binaxis = "y", stackdir = "center",dotsize = 0.4)+
scale_fill_manual(values=c("#4F81BD","#C0504D","#9BBB59","#8064A2"))+
theme_bw()+
theme(legend.position="none")
ggplot(mydata, aes(Class, Value))+
geom_boxplot(aes(fill = Class),size=0.25) +
geom_jitter(width=0.2,size=1.)+
#geom_dotplot(aes(fill = Class),binaxis = "y", stackdir = "center",dotsize = 0.4)+
scale_fill_manual(values=c("#FF0000","#0000FF","#00FFFF","#FF00FF"))+
theme_bw()+
theme(legend.position="none")
ggplot(mydata, aes(Class, Value))+
geom_boxplot(aes(fill = Class),size=0.25,outlier.color=NA) +
geom_jitter(width=0.2,size=1.)+
theme_bw()+
theme(legend.position="none")
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
library(reshape2)
mat <- round(cor(mtcars), 1)
mydata <- melt(mat)
colnames(mydata)<-c("Var1","Var2","value")
mydata$AbsValue<-abs(mydata$value)
#--------------------------------(b) 双色渐变系颜色方案---------------------------------------------------------
ggplot(mydata, aes(x= Var1 , y=Var2)) +
geom_point(aes(size=AbsValue,fill = value), shape=21, colour="black") +
scale_fill_gradientn(colours=c(brewer.pal(7,"Set1")[2],"white",brewer.pal(7,"Set1")[1]),na.value=NA)+
scale_size_area(max_size=12, guide=FALSE) +
theme(
text=element_text(size=15,face="plain",color="black"),
axis.title=element_text(size=13,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black"),
legend.position="right"
)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
mydata<-read.csv("Column_Data.csv",stringsAsFactors=FALSE)
mydata$Date<-as.Date(mydata$Date)
p<-ggplot(data = mydata, aes(x = Date, y = temperature,fill = temperature)) +
geom_bar(stat = "identity", width = 2)+
scale_fill_gradient2("Temperature",low=brewer.pal(7,"Set1")[2],mid="grey90",high=brewer.pal(7,"Set1")[1],midpoint=0)+
scale_y_continuous(name="Temperature", limits=c(-10, 30))+
theme(
panel.background=element_rect(fill="white",colour="black"),
panel.grid.major = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
axis.title=element_text(size=15),
axis.text.x = element_text(color="black",size=12),
axis.text.y = element_text(color="black",size=12),
legend.text=element_text(size=10),
legend.title=element_text(color="black",size=12),
legend.title.align = 0.5,
legend.position=c(0.15,0.75))
p
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
library(Cairo)
library(showtext)
mydata<- read.csv("Bar_Data.csv",stringAsFactors=FALSE)
mydata$Team<-as.character(mydata$Team)
# label1<-rep(NA,nrow(mydata))
# label2<-rep(NA,nrow(mydata))
#
# for (i in 1:nrow(mydata)){
#   if (mydata$Difference[i]>0){
#     label1[i]<-mydata$Team[i]
#   }
#   else{
#     label2[i]<-mydata$Team[i]
#   }
# }
#mydata<-cbind(mydata,label1,label2)
mydata<-transform(mydata, label1=ifelse(Difference>=0, Team, NA),
label2=ifelse(Difference>0, NA,Team))
mydata$Team <- factor(mydata$Team, levels = mydata$Team[order(mydata$Difference)])
#CairoPDF(file="图1-8-15(a)_条形图.pdf",width=5.28,height=5.47)
#showtext.begin()
ggplot(data = mydata, aes(x = Team, y = Difference,fill = Difference)) +
geom_bar(stat = "identity", width = 0.8,colour="black",size=0.25)+
scale_fill_gradient2(low=brewer.pal(7,"Set1")[2],mid="grey90",high=brewer.pal(7,"Set1")[1],midpoint=0)+
geom_text(aes(y = 0,     label=label2),size=3,hjust=-0.1)+ #添加负值部分的数据标签
geom_text(aes(y = -0.001,label=label1),size=3,hjust= 1.1)+ #添加正值部分的数据标签
coord_flip() +   #坐标轴翻转
ylim(-5,5)+
theme_minimal() + #图表主题设定
theme(
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line(colour = "grey80",size=.25),
panel.grid.minor.x = element_line(colour = "grey80",size=.25),
plot.title=element_text(size=15,hjust=.5),
axis.text.x = element_text(face="plain", color="black",
size=11, angle=0),
axis.text.y = element_blank(),
legend.position="right",
legend.text=element_text(size=10),
legend.title=element_text(size=10))
#showtext.end()
#dev.off()
mydata<- read.csv("Bar_Data.csv",stringAsFactors=FALSE)
mydata$Team<-as.character(mydata$Team)
mydata<- read.csv("Bar_Data.csv",stringAsFactors=FALSE)
??read.csv
??read.csv()
mydata<- read.csv("Bar_Data.csv")
mydata<- read.csv("Bar_Data.csv",stringsAsFactors=FALSE)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
library(Cairo)
library(showtext)
mydata<- read.csv("Bar_Data.csv",stringsAsFactors=FALSE)
mydata$Team<-as.character(mydata$Team)
mydata<-transform(mydata, label1=ifelse(Difference>=0, Team, NA),
label2=ifelse(Difference>0, NA,Team))
mydata$Team <- factor(mydata$Team, levels = mydata$Team[order(mydata$Difference)])
#CairoPDF(file="图1-8-15(a)_条形图.pdf",width=5.28,height=5.47)
#showtext.begin()
ggplot(data = mydata, aes(x = Team, y = Difference,fill = Difference)) +
geom_bar(stat = "identity", width = 0.8,colour="black",size=0.25)+
scale_fill_gradient2(low=brewer.pal(7,"Set1")[2],mid="grey90",high=brewer.pal(7,"Set1")[1],midpoint=0)+
geom_text(aes(y = 0,     label=label2),size=3,hjust=-0.1)+ #添加负值部分的数据标签
geom_text(aes(y = -0.001,label=label1),size=3,hjust= 1.1)+ #添加正值部分的数据标签
coord_flip() +   #坐标轴翻转
ylim(-5,5)+
theme_minimal() + #图表主题设定
theme(
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),
panel.grid.major.x = element_line(colour = "grey80",size=.25),
panel.grid.minor.x = element_line(colour = "grey80",size=.25),
plot.title=element_text(size=15,hjust=.5),
axis.text.x = element_text(face="plain", color="black",
size=11, angle=0),
axis.text.y = element_blank(),
legend.position="right",
legend.text=element_text(size=10),
legend.title=element_text(size=10))
#showtext.end()
#dev.off()
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2) # load ggplot2
# setting seed for random numbers
set.seed(1111)
# random normal variables
var1 = rnorm(500,-5, 1.5)
var2 = rnorm(500, 1, 2)
var3 = rnorm(500, -1, 3)
# data frame with normal variables
distribs = data.frame(values = c(var1, var2, var3),type = gl(n = 3, k = 500))
# plot
ggplot(data = distribs, aes(x = values, group = type)) +
geom_density(aes(fill = type), color = "black", alpha = 0.8,size=0.5)+
theme(legend.position = c(0.9,0.8))
