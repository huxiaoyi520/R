ggplot(poly, aes(x, y, group = interaction(hour, day),fill=value)) +
geom_polygon(colour="black",size=0.25) +
scale_fill_gradientn(colours=colormap)+
ylab("Date")+
xlab("")+
theme_bw()+
coord_polar() +
scale_y_continuous(limits=c(-N/2, max(poly$y)),
breaks=seq(N,max(poly$y),N),
labels=unique(dat$day) )+
scale_x_continuous(limits=c(0,N), breaks=seq(0,N-1,1), minor_breaks=0:N,
labels=paste0(rep(c(12,1:11),1), rep(c("AM","PM"),each=12))) +
theme( panel.background = element_blank(),
panel.border =  element_rect(fill=NA,colour = "grey80",size=.25),
panel.grid.major.y  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.major.x  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.minor.y  = element_blank(),
panel.grid.minor.x  = element_blank(),
axis.line = element_line(colour = "grey80",size=.25),
# panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
axis.text.y = element_text(size = 10,colour="grey50"),#,hjust=0,vjust=1),
axis.line.y = element_line(size=0.25)
)
#----------------------------------------图6-3-2 不同形式的螺旋图。(b) 螺旋热力图---------------------------------------------
bars <- dat %>%
mutate(hour.group = cut(hour, breaks=seq(0,24,width), labels=seq(0,23.75,width),include.lowest=TRUE), #
hour.group = as.numeric(as.character(hour.group))) %>%
group_by(datt, hour.group) %>%
summarise(meanTT = mean(Value2))  %>%
mutate(value=meanTT*max(dat$Value),
xmin=  hour.group,
xmax = hour.group + width,
ymin = datt*N + hour.group,
ymax = datt*N + hour.group + 24)
poly <- bars %>%
rowwise() %>%
do(with(., data_frame(day=datt,
date=day,
hour=hour.group,
value=value,
x = c(xmin, xmax, xmax, xmin),
y = c(ymin ,
ymin + width,
ymax + width,
ymax ))))
ggplot(poly, aes(x, y, group = interaction(hour, day),fill=value)) +
geom_polygon(colour="black",size=0.25) +
coord_polar() +
# ylim(-20, max(poly$y)) +
#viridis::scale_fill_viridis(discrete = TRUE, option = 'C')# +
scale_x_continuous(limits=c(0,N), breaks=seq(0,N-1,1), minor_breaks=0:N,
labels=paste0(rep(c(12,1:11),1), rep(c("AM","PM"),each=12))) +
scale_y_continuous(limits=c(-N/2, max(poly$y)),
breaks=seq(N,max(poly$y),N),
labels=unique(dat$day) )+
#scale_fill_gradient2(low="green", mid="yellow", high="red", midpoint=mean(bars$meanTT)) +
scale_fill_gradientn(colours=colormap)+
ylab("Date")+
xlab(NA)+
theme_bw()+
theme( panel.background = element_blank(),
panel.border =  element_rect(fill=NA,colour = "grey80",size=.25),
panel.grid.major.y  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.major.x  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.minor.y  = element_blank(),
panel.grid.minor.x  = element_blank(),
axis.line = element_line(colour = "grey80",size=.25),
# panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
axis.text.y = element_text(size = 10,colour="grey50"),#,hjust=0,vjust=1),
axis.line.y = element_line(size=0.25)
)
bars <- dat %>%
mutate(hour.group = cut(hour, breaks=seq(0,24,width), labels=seq(0,23.75,width),include.lowest=TRUE), #
hour.group = as.numeric(as.character(hour.group))) %>%
group_by(datt, hour.group) %>%
summarise(meanTT = mean(Value2))  %>%
# mutate(value=meanTT*max(dat$TravelTime),
#        xmin=  hour.group,
#        xmax = hour.group + width,
#        ymin = datt*N ,
#        ymax = datt*N  + 24)
#
mutate(value=meanTT*max(dat$Value),
xmin=  hour.group,
xmax = hour.group + width,
ymin = datt*N,
ymax = datt*N + meanTT*N*1.1)
poly <- bars %>%
rowwise() %>%
do(with(., data_frame(day=datt,
date=day,
hour=hour.group,
value=value,
x = c(xmin, xmax, xmax, xmin),
y = c(ymin ,
ymin ,
ymax + width,
ymax + width ))))
ggplot(poly, aes(x, y, group = interaction(hour, day),fill=value)) +
geom_polygon(colour="black",size=0.25) +
coord_polar() +
# ylim(-20, max(poly$y)) +
#viridis::scale_fill_viridis(discrete = TRUE, option = 'C')# +
scale_x_continuous(limits=c(0,N), breaks=seq(0,N-1,1), minor_breaks=0:N,
labels=paste0(rep(c(12,1:11),1), rep(c("AM","PM"),each=12))) +
scale_y_continuous(limits=c(-N/2, max(poly$y)*1.2),
breaks=seq(N,max(poly$y)*1.2,N),
labels=unique(dat$day))+
#scale_fill_gradient2(low="green", mid="yellow", high="red", midpoint=mean(bars$meanTT)) +
scale_fill_gradientn(colours=colormap)+
#scale_fill_brewer(palette="Blues")+
ylab("Date")+
xlab(NA)+
theme_bw()+
theme( panel.background = element_blank(),
panel.border =  element_rect(fill=NA,colour = "grey80",size=.25),
panel.grid.major.y  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.major.x  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.minor.y  = element_blank(),
panel.grid.minor.x  = element_blank(),
axis.line = element_line(colour = "grey80",size=.25),
# panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
axis.text.y = element_text(size = 10,colour="grey50"),#,hjust=0,vjust=1),
axis.line.y = element_line(size=0.25)
)
bars <- dat %>%
mutate(hour.group = cut(hour, breaks=seq(0,24,width), labels=seq(0,23.75,width),include.lowest=TRUE), #
hour.group = as.numeric(as.character(hour.group))) %>%
group_by(datt, hour.group) %>%
summarise(meanTT = mean(Value2))  %>%
mutate(value=meanTT*max(dat$Value),
xmin=  hour.group,
xmax = hour.group + width,
ymin = datt*N ,
ymax = datt*N  + 24)
poly <- bars %>%
rowwise() %>%
do(with(., data_frame(day=datt,
date=day,
hour=hour.group,
value=value,
x = c(xmin, xmax, xmax, xmin),
y = c(ymin ,
ymin ,
ymax + width,
ymax + width ))))
ggplot(poly, aes(x, y, group = interaction(hour, day),fill=value)) +
geom_polygon(colour="black",size=0.25) +
coord_polar() +
# ylim(-20, max(poly$y)) +
#viridis::scale_fill_viridis(discrete = TRUE, option = 'C')# +
scale_x_continuous(limits=c(0,N), breaks=seq(0,N-1,1), minor_breaks=0:N,
labels=paste0(rep(c(12,1:11),1), rep(c("AM","PM"),each=12))) +
scale_y_continuous(limits=c(-N/2, max(poly$y)),
breaks=seq(N,max(poly$y),N),
labels=unique(dat$day) )+
#scale_fill_gradient2(low="green", mid="yellow", high="red", midpoint=mean(bars$meanTT)) +
scale_fill_gradientn(colours=colormap)+
#scale_fill_brewer(palette="Blues")+
ylab("Date")+
xlab(NA)+
theme_bw()+
theme( panel.background = element_blank(),
panel.border =  element_rect(fill=NA,colour = "grey80",size=.25),
panel.grid.major.y  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.major.x  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.minor.y  = element_blank(),
panel.grid.minor.x  = element_blank(),
axis.line = element_line(colour = "grey80",size=.25),
# panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
axis.text.y = element_text(size = 10,colour="grey50"),#,hjust=0,vjust=1),
axis.line.y = element_line(size=0.25)
)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(data.table)
library(RColorBrewer)
set.seed(1)
dtData <- data.table(
date = seq(as.Date("1/01/2014", "%d/%m/%Y"),as.Date("31/12/2017", "%d/%m/%Y"),"days"),
ValueCol = runif(1461))
dtData[, ValueCol := ValueCol + (strftime(date,"%u") %in% c(6,7) * runif(1) * 0.75), .I]
dtData[, ValueCol := ValueCol + (abs(as.numeric(strftime(date,"%m")) - 6.5)) * runif(1) * 0.75, .I]
dtData$Year<- as.integer(strftime(dtData$date, '%Y'))   #年份
dtData$DateNum<-as.numeric(dtData$date)-as.numeric(as.Date(paste(as.character(strftime(dtData$date, "%Y")),"-01-01", sep = "")))
Step<-5
dtData$Asst<-rep(Step,nrow(dtData))
YearRange<-unique(dtData$Year)
for(i in 1:length(YearRange)){
dtData$Asst[dtData$Year==YearRange[i]]<-seq(i*Step, (i+1)*Step, length.out = length(dtData$Asst[dtData$Year==YearRange[i]]))
}
circlelabel<-c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec")
circlemonth<-seq(15,345,length=12)
circlebj<-rep(c(-circlemonth[1:3],rev(circlemonth[1:3])),2)
#-------------------------------------图6-3-5不同形式的螺旋面积图. (b)颜色映射填充----------------------------------------
Height<-4.8
dtData$Valueht<-(dtData$ValueCol-min(dtData$ValueCol))/(max(dtData$ValueCol)-min(dtData$ValueCol))*Height
ggplot()+
geom_linerange(data=dtData,aes(x=DateNum,ymin=Asst-5,ymax=Asst+Valueht-5,color=ValueCol),size =1)+
geom_line(data=dtData,aes(x=DateNum,y=Asst+Valueht-5,group=Year),size =0.25,color="black")+
geom_line(data=dtData,aes(x=DateNum,y=Asst-5,group=Year),size =0.25,color="grey20")+
coord_polar(theta="x",start=0)+
scale_x_continuous(breaks=c(1,31,59,90,120,151,181,212,243,273,304,334))+
scale_y_continuous(limits=c(-5,28),breaks=c(2.5,7.5,12.5,17.5),labels=c("2014","2015","2016","2017"))+
scale_color_gradientn(colours=rev(brewer.pal(11,'Spectral')))+
geom_text(data=NULL,aes(x=circlemonth,y=28,label=circlelabel,
angle=circlebj),size=4,color="grey50")+#,hjust=0.5,vjust=.5，family="myfont",
ylab("Year")+
theme_bw()+
theme( panel.background = element_blank(),
panel.border =  element_rect(fill=NA,colour = "grey80",size=.25),
panel.grid.major.y  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.major.x  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.minor.y  = element_blank(),
panel.grid.minor.x  = element_blank(),
axis.line = element_line(colour = "grey80",size=.25),
# panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
axis.text.y = element_text(size = 10,colour="grey50"),#,hjust=0,vjust=1),
axis.line.y = element_line(size=0.25)
)
#----------------------------------------图6-3-5不同形式的螺旋面积图.(a)纯色填充-----------------------------------------
ggplot()+
geom_ribbon(data=dtData,aes(x=DateNum,ymin=Asst-5,ymax=Asst+Valueht-5,group=Year,fill=Year),
size =0.75,fill="#FF8B49")+
geom_line(data=dtData,aes(x=DateNum,y=Asst+Valueht-5,group=Year),size =0.25,color="black")+
geom_line(data=dtData,aes(x=DateNum,y=Asst-5,group=Year),size =0.25,color="grey20")+
coord_polar(theta="x",start=0)+
xlim(1,355)+
scale_x_continuous(breaks=c(1,31,59,90,120,151,181,212,243,273,304,334))+
scale_y_continuous(limits=c(-5,28),breaks=c(2.5,7.5,12.5,17.5),labels=c("2014","2015","2016","2017"))+
geom_text(data=NULL,aes(x=circlemonth,y=28,label=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),
angle=circlebj),size=4,color="grey50")+
ylab("Year")+
theme_bw()+
theme( panel.background = element_blank(),
panel.border =  element_rect(fill=NA,colour = "grey80",size=.25),
panel.grid.major.y  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.major.x  = element_line(colour = "grey80",size=.25),#,linetype ="dotted" ),
panel.grid.minor.y  = element_blank(),
panel.grid.minor.x  = element_blank(),
axis.line = element_line(colour = "grey80",size=.25),
# panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
axis.text.y = element_text(size = 10,colour="grey50"),#,hjust=0,vjust=1),
axis.line.y = element_line(size=0.25)
)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(reshape2)
library(ggTimeSeries)
df<-read.csv("StreamGraph_Data.csv",header=TRUE)
df_series<-df[,2:ncol(df)]
Col_Max<-apply(df_series,2,max)
Col_Sort<-sort(Col_Max,index.return=TRUE,decreasing = TRUE)
mydata<-melt(df,id="time")
mydata$variable<-factor(mydata$variable,levels=colnames(df_series)[Col_Sort$ix])
ggplot(mydata, aes(x = time, y = value, group = variable, fill = variable)) +
stat_steamgraph(colour="black",size=0.25)+
xlab('Time') +
ylab('') +
theme_light()
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
library(reshape2)
df<-read.csv("StreamGraph_Data.csv",header=TRUE)
#------------------------------------------------图6-4-3 时间序列峰峦图(a)-----------------------------------
x<-seq(1:nrow(df))
label<-letters[1:ncol(df)]#colnames(y2)<-
colnames(df)<-c(seq(1,ncol(df),1))
# base plot
dfData2<-as.data.frame(cbind(x,df))
Order<-sort(colSums(dfData2[,2:ncol(dfData2)]),index.return=TRUE,decreasing = TRUE)
label2<-label[Order$ix]
mydata<-melt(dfData2,id="x")
#levels(mydata$variable)[as.integer( colnames(Order))]
mydata$variable <- factor(mydata$variable, levels = levels(mydata$variable)[Order$ix])
N<-ncol(df)
Step<-1500
mydata$offest<--as.numeric(mydata$variable)*Step# adapt the 0.2 value as you need
mydata$V1_density_offest<-mydata$value+mydata$offest
ggplot(mydata, aes(x, V1_density_offest, color=variable)) +
#geom_linerange(aes(x, ymin=offest,ymax=V1_density_offest, color==variable),size =1.5, alpha =1)
geom_ribbon(aes(x, ymin=offest,ymax=V1_density_offest, fill=variable),alpha=1,colour=NA)+
geom_line(aes(group=variable),color="black")+
scale_y_continuous(breaks=seq(-Step,-Step*N,-Step),labels=label2)+
#scale_fill_manual(values =COLS)+
xlab("Time")+
ylab("Class")+
theme_classic()+
theme(
panel.background=element_rect(fill="white",colour=NA),
panel.grid.major.x = element_line(colour = "grey80",size=.25),
panel.grid.major.y = element_line(colour = "grey60",size=.25),
axis.line = element_blank(),
text=element_text(size=15),
plot.title=element_text(size=15,hjust=.5),#family="myfont",
legend.position="none"
)
#----------------------------------------------------图6-4-3 时间序列峰峦图(b)----------------------------------
library(RColorBrewer)
colormap <- colorRampPalette(rev(brewer.pal(11,'Spectral')))(32)
label<-letters[1:ncol(df)]#colnames(y2)<-
colnames(df)<-c(seq(1,ncol(df),1))
# base plot
dfData2<-as.data.frame(cbind(x,df))
Order<-sort(colSums(dfData2[,2:ncol(dfData2)]),index.return=TRUE,decreasing = TRUE)
label2<-label[Order$ix]
dfData2<-dfData2[c(1,Order$ix+1)]
mydata<-melt(dfData2,id="x")
colnames(dfData2)<-c("x",c(seq(ncol(y2),1,-1)))
N<-ncol(df)
Step<-1500
mydata$offest<--as.numeric(mydata$variable)*Step# adapt the 0.2 value as you need
mydata$V1_density_offest<-mydata$value+mydata$offest
ggplot(mydata, aes(x, V1_density_offest,group=variable)) +
geom_linerange(aes(x, ymin=offest,ymax=V1_density_offest, color=value),size =1.5, alpha =1) +
scale_color_gradientn(colours=colormap)+
#geom_ribbon(aes(x, ymin=offest,ymax=V1_density_offest, fill=variable),alpha=1,colour=NA)+
geom_line(aes(group=variable),color="black")+
scale_y_continuous(breaks=seq(-Step,-Step*N,-Step),labels=label2)+
xlab("Time")+
ylab("Class")+
theme_classic()+
theme(
panel.background=element_rect(fill="white",colour=NA),
panel.grid.major.x = element_line(colour = "grey80",size=.25),
panel.grid.major.y = element_line(colour = "grey60",size=.25),
axis.line = element_blank(),
text=element_text(size=13),
plot.title=element_text(size=15,hjust=.5),#family="myfont",
legend.position="right"
)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
library(ggalt) # ggalt 的下载语句：devtools::install_github("hrbrmstr/ggalt")
library(reshape2)
colormap <- colorRampPalette(rev(brewer.pal(11,'RdYlBu')))(15)
df<-as.data.frame(matrix(cumsum(rnorm(250 * 15)), ncol = 15))
colnames(df) <- paste("series", LETTERS[1:15])
df$x<-rownames(df)
dfData<-melt(df,id='x')
ggplot(dfData, aes(x =as.numeric(x), y = value) )+
geom_horizon(colour=NA,size=0.25,bandwidth=10)+
facet_wrap(~variable, ncol = 1,strip.position = "left")+
scale_fill_manual(values=colormap)+
xlab('Time') +
ylab('') +
theme_bw()+
theme(strip.background = element_blank(),
strip.text.y = element_text(hjust=0, angle=180,size=10),
axis.text.y=element_blank(),
panel.grid = element_blank(),
panel.spacing.y=unit(-0.05, "lines"),
panel.grid.major.y=element_blank(),
panel.grid.minor.y =element_blank(),
axis.ticks.y = element_blank())
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(data.table) #提供data.table()函数
library(ggTimeSeries)
library(RColorBrewer)
set.seed(1234)
dat <- data.table(
date = seq(as.Date("1/01/2014", "%d/%m/%Y"),as.Date("31/12/2017", "%d/%m/%Y"),"days"),
ValueCol = runif(1461)
)
dat[, ValueCol := ValueCol + (strftime(date,"%u") %in% c(6,7) * runif(1) * 0.75), .I]
dat[, ValueCol := ValueCol + (abs(as.numeric(strftime(date,"%m")) - 6.5)) * runif(1) * 0.75, .I]
dat$Year<- as.integer(strftime(dat$date, '%Y'))   #年份
dat$month <- as.integer(strftime(dat$date, '%m')) #月份
dat$week<- as.integer(strftime(dat$date, '%W'))   #周数
MonthLabels <- dat[,list(meanWkofYr = mean(week)), by = c('month') ]
MonthLabels$month <-month.abb[MonthLabels$month]
ggplot(data=dat,aes(date=date,fill=ValueCol))+
stat_calendar_heatmap()+
scale_fill_gradientn(colours= rev(brewer.pal(11,'Spectral')))+
facet_wrap(~Year, ncol = 1,strip.position = "right")+
scale_y_continuous(breaks=seq(7, 1, -1),labels=c("Mon","Tue","Wed","Thu","Fri","Sat","Sun"))+
scale_x_continuous(breaks = MonthLabels[,meanWkofYr], labels = MonthLabels[, month],expand = c(0, 0)) +
xlab(NULL)+
ylab(NULL)+
theme( panel.background = element_blank(),
panel.border = element_rect(colour="grey60",fill=NA),
strip.background = element_blank(),
strip.text = element_text(size=13,face="plain",color="black"),
axis.line=element_line(colour="black",size=0.25),
axis.title=element_text(size=10,face="plain",color="black"),
axis.text = element_text(size=10,face="plain",color="black"))
library(dplyr)
dat17 <- filter(dat,Year==2017)[,c(1,2)]
dat17$month <- as.integer(strftime(dat17$date, '%m'))  #月份
dat17$monthf<-factor(dat17$month,levels=as.character(1:12),
labels=c("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"),ordered=TRUE)
dat17$weekday<-as.integer(strftime(dat17$date, '%u'))#周数
dat17$weekdayf<-factor(dat17$weekday,levels=(1:7),
labels=(c("Mon","Tue","Wed","Thu","Fri","Sat","Sun")),ordered=TRUE)
dat17$yearmonth<- strftime(dat17$date, '%m%Y')   #月份
dat17$yearmonthf<-factor(dat17$yearmonth)
dat17$week<- as.integer(strftime(dat17$date, '%W'))#周数
dat17<-dat17 %>% group_by(monthf)%>%mutate(monthweek=1+week-min(week))
#dat17<-ddply(dat17,.(monthf),transform,monthweek=1+week-min(week)) #library(plyr)
dat17$day<-strftime(dat17$date, "%d")
ggplot(dat17, aes(weekdayf, monthweek, fill=ValueCol)) +
geom_tile(colour = "white") +
scale_fill_gradientn(colours=rev(brewer.pal(11,'Spectral')))+
geom_text(aes(label=day),size=3)+
facet_wrap(~monthf ,nrow=3) +
scale_y_reverse()+
xlab("Day") + ylab("Week of the month") +
theme(strip.text = element_text(size=11,face="plain",color="black"))
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
library(dplyr)
dt <- data.frame(Value = c(24.20,30.90,12.50,12.30,8.10,12.10),
Chips = c('LVS','SJM','MCE','Galaxy','MGM','Wynn'))
dt <-arrange(dt,Value)
dt$Chips <- factor(dt$Chips, levels =dt$Chips)
ggplot(dt, aes(x = "", y = Value, fill = Chips)) +
geom_bar(stat = "identity", position="stack",width = 1,color="black",size=0.25) +
coord_polar(theta = "y",start=0) +
labs(x = "", y = "", title = "") +
scale_fill_manual( values=brewer.pal(nrow(dt), "Blues")) +
theme_void()
library(RColorBrewer)
library(dplyr)
library(graphics)
#-------------------------图7-1-1 饼图(a)------------------------------------------
df <- data.frame(value = c(24.20,30.90,12.50,12.30,8.10,12.10),
group = c('LVS','SJM','MCE','Galaxy','MGM','Wynn'))
df <-arrange(df,value)
labs <- paste0(df$group," \n(", round(df$value/sum(df$value)*100,2), "%)")
pie(df$value,labels=labs, init.angle=90,col =  brewer.pal(nrow(df), "Reds"),
border="black")
#-------------------------图7-1-1 饼图(b)------------------------------------------
df <- data.frame(value = c(24.20,75.90,12.50,12.30,8.10,12.10),
group = c('LVS','SJM','MCE','Galaxy','MGM','Wynn'))
df <-arrange(df,desc(value))
df$color<-rev(brewer.pal(nrow(df), "Blues"))#Oranges
df<-df[c(2:nrow(df),1),]
labs <- paste0(df$group," \n(", round(df$value/sum(df$value)*100,2), "%)")
pie(df$value,labels=labs, init.angle=90,col = df$color,
border="black")
n<-6
gg_color_hue <- function(n) {hues = seq(15, 375, length = n + 1); hcl(h = hues, l = 65, c = 100)[1:n]}
pie(df$value,labels=labs, init.angle=90,col =gg_color_hue(n),
border="black")
pie(df$value,labels=labs, init.angle=90,col ="#3182BD",
border="black")
df <- data.frame(value = c(24.20,75.90,12.50,12.30,8.10,12.10),
group = c('LVS','SJM','MCE','Galaxy','MGM','Wynn'))
df <-arrange(df,value)
labs <- paste0(df$group," \n(", round(df$value/sum(df$value)*100,2), "%)")
pie(df$value,labels=labs, init.angle=90,col =  brewer.pal(nrow(df), "Reds"),
border="black")
#-------------------------图7-1-1 饼图(d)------------------------------------------
df <- data.frame(value = c(24.20,30.90,12.50,12.30,8.10,12.10),
group = c('LVS','SJM','MCE','Galaxy','MGM','Wynn'))
df <-arrange(df,desc(value))
df$color<-rev(brewer.pal(nrow(df), "Oranges"))
df<-df[c(2:nrow(df),1),]
labs <- paste0(df$group," \n(", round(df$value/sum(df$value)*100,2), "%)")
pie(df$value,labels=labs, init.angle=90,col = df$color,
border="black")
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(scatterpie)
library(RColorBrewer)
crime <- read.csv("crimeRatesByState2005.tsv",header = TRUE, sep = "\t", stringsAsFactors = F)
radius <- sqrt(crime$population / pi)
Max_radius<-max(radius)
Bubble_Scale<-0.1
crime$radius <- Bubble_Scale * radius/Max_radius
mydata<-crime[,c(2,4,3,5:8)]  #数据集构造
Col_Mean<-apply(mydata,2,mean)
Col_Sort<-sort(Col_Mean,index.return=TRUE,decreasing = TRUE)
mydata<-mydata[,Col_Sort$ix]
x<-(mydata$murder-min(mydata$murder))/(max(mydata$murder)-min(mydata$murder))+0.00001
y<-(mydata$Robbery-min(mydata$Robbery))/(max(mydata$Robbery)-min(mydata$Robbery))+0.00001
xlabel<-seq(0,10,2)
xbreak<-(xlabel-min(mydata$murder))/(max(mydata$murder)-min(mydata$murder))+0.00001
ylabel<-seq(0,260,50)
ybreak<-(ylabel-min(mydata$Robbery))/(max(mydata$Robbery)-min(mydata$Robbery))+0.00001
mydata2<-data.frame(x,y,radius=crime$radius)
mydata2<-cbind(mydata2,mydata)
Legnd_label<-colnames(mydata2)[4:10]
colnames(mydata2)[4:10]<-LETTERS[1:7]
#---------------------------------------图7-1-3 散点复合饼图系列(a)-------------------------------------------------
ggplot() +
geom_scatterpie(aes(x=x, y=y,r=0.05), data=mydata2, cols=colnames(mydata2)[4:10],alpha=0.9,size=0.1) +
scale_fill_manual(values=colorRampPalette(brewer.pal(7, "Set2"))(7),labels=Legnd_label)+
#geom_scatterpie_legend(mydata2$radius, x=0.1, y=0.95, n=5,labeller=function(x) round((x* Max_radius/ Bubble_Scale)^2*pi))+
#geom_scatterpie_legend(mydata2$radius, x=0.009758116, y=0.090868067, n=4,labeller=function(x) round((x* Max_radius/ Bubble_Scale)^2*pi))+
scale_x_continuous(breaks=xbreak, labels=xlabel)+
scale_y_continuous(breaks=ybreak, labels=ylabel)+
xlab("murder")+
ylab("Robbery")+
coord_fixed()+
theme(
axis.title=element_text(size=15,face="plain",color="black"),
axis.text = element_text(size=13,face="plain",color="black"),
legend.title=element_text(size=15,face="plain",color="black"),
legend.text = element_text(size=14,face="plain",color="black")
)
