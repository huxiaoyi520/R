fitpoints <- predict(elev.loess )
scatter3D(z = z, x = x, y = y, pch = 21, cex = 1,
theta = 150, phi = 40, d=3,ticktype = "detailed",
col = colormap,
surf = list(x = xmar, y = ymar, z = pred_z,border = "black",shade=0,ffit = fitpoints), # fit参数增加预测值与真实值之间的连线
bty = "f", col.panel = NA,
ylab = "0-60 mph (sec)",
xlab = "Gax Mileage (mpg)",
zlab="Power (KW)",
zlim=c(20,180))# col.panel = NA则panel透明
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library( directlabels)
library(RColorBrewer)
rf <- colorRampPalette(rev(brewer.pal(11,'Spectral')))
colormap <- colorRampPalette(rev(brewer.pal(11,'Spectral')))(32)
z<-as.matrix(read.table("等高线.txt",header=TRUE))
colnames(z)<-seq(1,ncol(z),by=1)
max_z<-max(z)
min_z<-min(z)
breaks_lines<-seq(min(z),max(z),by=(max_z-min_z)/10)
map<-melt(z)
colnames(map)<-c("Var1","Var2","value")
head(map)
Contour<-ggplot(map,aes(x=Var1,y=Var2,z=value))+
geom_tile(aes(fill=value))+#根据高度填充
scale_fill_gradientn(colours=colormap)+
geom_contour(aes(colour= ..level..),breaks=breaks_lines,color="black")+#
labs(x="X-Axis",y="Y-Axis",fill="Z-Value")+
theme(
axis.title=element_text(size=15,face="plain",color="black"),
axis.text = element_text(size=13,face="plain",color="black"),
legend.title=element_text(size=13,face="plain",color="black"),
legend.text = element_text(size=11,face="plain",color="black"),
legend.background = element_blank(),
legend.position =c(0.15,0.2)
)
Contour
direct.label(Contour, list("bottom.pieces", cex=0.8, #"far.from.others.borders",
fontface="plain", fontfamily="serif", colour='black'))
library(plot3D)
library(RColorBrewer)
x <- y <- z <- seq(-4, 4, by = 0.2)
M <- mesh(x, y, z)
R <- with (M, sqrt(x^2 + y^2 + z^2))
p <- sin(2*R) /(R+1e-3)
colormap <- colorRampPalette(rev(brewer.pal(11,'Spectral')),alpha = TRUE)(32)
slice3D(x, y, z, colvar = p, facets = FALSE,
col = ramp.col(colormap,alpha = 0.9),
clab="p vlaue",
xs = 0, ys = c(-4, 0, 4), zs = NULL,
ticktype = "detailed",bty = "f",box = TRUE,
theta = -120, phi = 30, d=3,
colkey = list(length = 0.5, width = 1, cex.clab = 1))
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggtern)
library(grid)
library(RColorBrewer)
#---------------------------------------(a) 三元相散点图-----------------------------------------------------
data(Fragments)
arrangement = list()
for(base in c('ilr')){
y = ggtern(Fragments,aes(Qm,Qp,M)) +
theme_showarrows()+
geom_point(size=3) +
ggtitle(sprintf("Basis: %s",base)) +
limit_tern(.5,1,.5)
arrangement[[length(arrangement) + 1]] = y
}
grid.arrange(grobs = arrangement,nrow=1)
#----------------------------------(a) -三元相等高线图-----------------------------------------------------
data(Fragments)
arrangement = list()
for(base in c('ilr')){
x = ggtern(Fragments,aes(Qm,Qp,M)) +
stat_density_tern(geom='polygon',
aes(fill=..level..),
base=base,
colour='grey50') +
theme_showarrows()+
geom_point() +
ggtitle(sprintf("Basis: %s",base)) +
scale_fill_gradientn(colours=c(brewer.pal(7,"Set1")[2],"white",brewer.pal(7,"Set1")[1]),na.value=NA)+
limit_tern(.5,1,.5)
arrangement[[length(arrangement) + 1]] = x
}
grid.arrange(grobs = arrangement,nrow=1)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(ggalt)
#----------------------------------------图4-6-1 散点曲线图系列(a)-------------------------------------------------------
mydata<-read.csv("Line_Data.csv",header=T)
ggplot(mydata, aes(x, y) )+
geom_xspline(spline_shape=-0.5, size=0.25)+
geom_point(shape=21,size=4,color="black",fill="#F78179") +
xlab("X-Axis")+
ylab("Y-Axis")+
ylim(0, 50)+
theme_gray()+
theme(
text=element_text(size=15,face="plain",color="black"),
axis.title=element_text(size=10,face="plain",color="black"),
axis.text = element_text(size=10,face="plain",color="black")
)
#----------------------------------------图4-6-1 散点曲线图系列(d)-------------------------------------------------------
library(splines)
newdata <- data.frame(spline(mydata$x,mydata$y,n=300,method="hyman" ))
ggplot(newdata, aes(x, y) )+
geom_line(size=0.5,color="black")+
geom_area(fill="#F78179",alpha=0.9)+
geom_point(data=mydata,aes(x,y),shape=21,size=3,color="black",fill="white") +
xlab("X-Axis")+
ylab("Y-Axis")+
ylim(0, 50)+
theme_gray()+
theme(
text=element_text(size=15,face="plain",color="black"),
axis.title=element_text(size=12,face="plain",color="black"),
axis.text = element_text(size=12,face="plain",color="black")
)
library(plot3D)
library(RColorBrewer)
mydata0<-read.csv("Facting_Data.csv",check.names =FALSE)
N<-ncol(mydata0)-1
#colnames(mydata0)<-c("X_Axis",seq(60,25,-5))
mydata<-data.frame(x=numeric(),y=numeric(),variable=character())
for (i in 1:N){
newdata<-data.frame(spline(mydata0[,1],mydata0[,i+1],n=300,method= "natural"))
newdata$variable<-colnames(mydata0)[i+1]
mydata<-rbind(mydata,newdata)
}
mydata$variable<-as.numeric(mydata$variable)
group<-unique(mydata$variable)
M<-length(group)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
colormap <- rev(gg_color_hue(M))#brewer.pal(M,'RdYlGn')
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1))
perspbox(z=as.vector(0),#add=TRUE,
xlim=c(20,70),ylim=c(360,750),zlim=c(0,15),
ticktype = "detailed",bty = "f",box = TRUE,colkey = FALSE,
theta = -110, phi = 20, d=3)
for (i in 1:M){
df0<-mydata[mydata$variable==group[i],]
Ndf<-nrow(df0)
df<-rbind(df0,c(df0$x[1],df0$y[Ndf],df0$variable[Ndf]))
with(df,polygon3D(x=variable,y=x, z=y, alpha=0.6,
col=colormap[i],lwd = 3,add=TRUE,colkey = FALSE))
with(df0,lines3D(x=variable,y=x, z=y,
lwd = 0.5,col="black",add=TRUE))
}
library(plot3D)
library(RColorBrewer)
mydata0<-read.csv("Facting_Data.csv",check.names =FALSE)
N<-ncol(mydata0)-1
#colnames(mydata0)<-c("X_Axis",seq(60,25,-5))
mydata<-data.frame(x=numeric(),y=numeric(),variable=character())
for (i in 1:N){
newdata<-data.frame(spline(mydata0[,1],mydata0[,i+1],n=300,method= "natural"))
newdata$variable<-colnames(mydata0)[i+1]
mydata<-rbind(mydata,newdata)
}
mydata$variable<-as.numeric(mydata$variable)
group<-unique(mydata$variable)
M<-length(group)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
colormap <- rev(gg_color_hue(M))#brewer.pal(M,'RdYlGn')
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1))
perspbox(z=as.vector(0),#add=TRUE,
xlim=c(20,70),ylim=c(360,750),zlim=c(0,15),
ticktype = "detailed",bty = "f",box = TRUE,colkey = FALSE,
theta = -110, phi = 20, d=3)
for (i in 1:M){
df<-mydata[mydata$variable==group[i],]
df$z0<-rep(0,nrow(df))
with(df,segments3D(x0=variable, y0=x,z0=z0,
x1=variable,y1=x, z1=y,
col=colormap[i],lwd = 3,add=TRUE,colkey = FALSE))
with(df,lines3D(x=variable,y=x, z=y,
lwd = 0.5,col="black",add=TRUE))
}
#----------------------------------------------------------------------------------------------------------------
#colormap <- colorRampPalette(rev(brewer.pal(11,'Spectral')),alpha = TRUE)(32)
colormap <- colorRampPalette(rev(brewer.pal(7,'RdYlGn')),alpha = TRUE)(32)
pmar <- par(mar = c(5.1, 4.1, 4.1, 6.1))
perspbox(z=as.vector(0),#add=TRUE,
xlim=c(20,70),ylim=c(360,750),zlim=c(0,15),
ticktype = "detailed",bty = "f",box = TRUE,colkey = FALSE,
theta = -110, phi = 20, d=3)
for (i in 1:M){
df0<-mydata[mydata$variable==group[i],]
df<-cbind(df0,z0=rep(0,nrow(df0)))
df<-df[df$y>0.05,]
with(df,segments3D(x0=variable, y0=x,z0=z0,
x1=variable,y1=x, z1=y, colvar =y,
alpha=0.5,col=ramp.col(colormap,alpha = 0.9),lwd = 3,add=TRUE,colkey = FALSE))
with(df0,lines3D(x=variable,y=x, z=y,
lwd = 1.5,col="black",add=TRUE))
}
colkey (col=colormap,clim=range(mydata$y),clab = "Z Value", add=TRUE, length=0.5,side = 4)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
library(reshape2)
#-----------------------------------图4-7-2 行分面的带填充的曲线图(a)-------------------------------------------
mydata0<-read.csv("Facting_Data.csv",stringsAsFactors=FALSE)
colnames(mydata0)<-c("X_Axis",seq(60,25,-5))
mydata<-melt(mydata0,id.vars = "X_Axis")
ggplot(mydata,aes(X_Axis,value,fill=variable))+
geom_area(color="black",size=0.25)+
facet_grid(variable~.)+
theme(
text=element_text(size=15,face="plain",color="black"),
axis.title=element_text(size=10,face="plain",color="black"),
axis.text = element_text(size=10,face="plain",color="black"),
legend.position="none"
)
#-----------------------------------图4-7-2 行分面的带填充的曲线图(b)-------------------------------------------
library(RColorBrewer)
colormap <- colorRampPalette(rev(brewer.pal(11,'Spectral')))(32)
mydata0<-read.csv("Facting_Data.csv",stringsAsFactors=FALSE)
N<-ncol(mydata0)-1
colnames(mydata0)<-c("X_Axis",seq(60,25,-5))
mydata<-data.frame(x=numeric(),y=numeric(),variable=character())
for (i in 1:N){
newdata<-data.frame(spline(mydata0[,1],mydata0[,i+1],n=300,method= "natural"))
newdata$variable<-colnames(mydata0)[i+1]
mydata<-rbind(mydata,newdata)
}
mydata$variable<-factor(mydata$variable,levels=seq(60,25,-5))
ggplot(mydata,aes(x,y,group=variable))+
geom_bar(aes(fill=y),color=NA,size=0.25,stat="identity")+
geom_line(color="black",size=0.5)+
scale_fill_gradientn(colours=colormap)+
facet_grid(variable~.)+
theme(
text=element_text(size=15,face="plain",color="black"),
axis.title=element_text(size=10,face="plain",color="black"),
axis.text = element_text(size=10,face="plain",color="black"),
legend.position="right"
)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
colormap <- colorRampPalette(rev(brewer.pal(11,'Spectral')))(32)
mydata0<-read.csv("Facting_Data.csv",check.names =FALSE)
N<-ncol(mydata0)-1
labels_Y<-colnames(mydata0)[1:N+1]
colnames(mydata0)<-c("x",seq(1,N,1))
mydata<-data.frame(x=numeric(),y=numeric(),variable=character()) #创建空的Data.Frame
for (i in 1:N){
newdata<-data.frame(spline(mydata0[,1],mydata0[,i+1],n=300,method= "natural"))
newdata$variable<-colnames(mydata0)[i+1]
mydata<-rbind(mydata,newdata)
}
Step<-5
mydata$offest<--as.numeric(mydata$variable)*Step
mydata$V1_density_offest<-mydata$y+mydata$offest
p<-ggplot()
for (i in 1:N){
p<-p+ geom_linerange(data=mydata[mydata$variable==i,],aes(x=x,ymin=offest,ymax=V1_density_offest,group=variable,color=y),size =1, alpha =1) +
geom_line(data=mydata[mydata$variable==i,],aes(x=x, y=V1_density_offest),color="black",size=0.5)
}
#ggplot() +
#  geom_linerange(aes(x=x,ymin=offest,ymax=V1_density_offest,group=variable,color=y),mydata,size =1, alpha =1) +
p+scale_color_gradientn(colours=colormap)+
#geom_line(aes(x, V1_density_offest,group=variable),mydata,color="black")+
scale_y_continuous(breaks=seq(-Step*N,-Step,Step),labels=rev(labels_Y))+
xlab("Time")+
ylab("Class")+
theme(
panel.background=element_rect(fill="white",colour=NA),
panel.grid.major.x = element_line(colour = "grey80",size=.25),
panel.grid.major.y = element_line(colour = "grey60",size=.25),
axis.line = element_blank(),
text=element_text(size=13),
plot.title=element_text(size=15,hjust=.5),
legend.position="right"
)
#------------------------------------------------------------------------------------------------------
ggplot() +
geom_ribbon(aes(x, ymin=offest,ymax=V1_density_offest, fill=variable),mydata, alpha=1,colour=NA)+
geom_line(aes(x, V1_density_offest, color=variable,group=variable),mydata, color="black")+
scale_y_continuous(breaks=seq(-40,-5,5),labels=rev(labels_Y))+
theme_classic()+
theme(
panel.background=element_rect(fill="white",colour=NA),
panel.grid.major.x = element_line(colour = "grey80",size=.25),
panel.grid.major.y = element_line(colour = "grey60",size=.25),
axis.line = element_blank(),
text=element_text(size=15),
plot.title=element_text(size=15,hjust=.5),#family="myfont",
legend.position="none"
)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
library(RColorBrewer)
library(reshape2)
#------------------------------------------(a)热力图 --------------------------------------------------------
data("mtcars")
mat <- round(cor(mtcars), 1)
mydata <- melt(mat)
colnames(mydata)<-c("Var1","Var2","value")
ggplot(mydata, aes(x = Var1, y = Var2, fill = value,label=value)) +
geom_tile(colour="black") +
geom_text(size=3,colour="white")+
coord_equal()+
scale_fill_gradientn(colours=c(brewer.pal(7,"Set1")[2],"white",brewer.pal(7,"Set1")[1]),na.value=NA)+
theme(panel.background=element_rect(fill="white",colour=NA),
panel.grid.major = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
panel.grid.minor = element_line(colour = "grey60",size=.25,linetype ="dotted" ),
text=element_text(size=15),
plot.title=element_text(size=15,family="myfont",hjust=.5)
)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
#------------------------------不同类型的树形图(a)------------------------------------
library(factoextra)
data(USArrests)
dd <- dist(scale(datasets::mtcars), method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
fviz_dend(hc, k = 4, # 聚类的类别数目为4
cex = 0.8, # 数据标签的字体大小
k_colors = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
color_labels_by_k = FALSE, # 数据标签也根据颜色设定
rect_border = c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"),
rect = TRUE, # 使用不同颜色的矩形框标定类别
rect_fill = TRUE)
library(dendextend)
library(circlize)
dd <- dist(scale(datasets::mtcars), method = "euclidean")
hc <- hclust(dd, method = "ward.D2")
dend <- as.dendrogram(hc)
# modify the dendrogram to have some colors in the branches and labels
dend <- dend %>%
color_branches(k=4,col= c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"))# %>%
#color_labels(k=4,col= c("#2E9FDF", "#00AFBB", "#E7B800", "#FC4E07"), color_labels_by_k = TRUE)
# plot the radial plot
par(mar = rep(0,4))
#circlize_dendrogram(dend, dend_track_height = 0.8)
circlize_dendrogram(dend, labels_track_height = 0.6, dend_track_height = 0.3,size=3)
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggraph)
library(igraph)
library(tidyverse)
library(viridis)
data(flare)
# Create a subset of the dataset (I remove 1 level)
edges<-flare$edges %>% filter(to %in% from) %>% droplevels()
vertices <- flare$vertices %>% filter(name %in% c(edges$from, edges$to)) %>% droplevels()
vertices$size<-runif(nrow(vertices))
# Rebuild the graph object
mygraph <- graph_from_data_frame( edges, vertices=vertices )
colormap <- colorRampPalette(rev(brewer.pal(9,'YlGnBu')))(32)
ggraph(mygraph, layout = 'circlepack', weight="size" ) +
geom_node_circle(aes(fill = depth)) +
geom_node_text( aes(label=shortName, filter=leaf, fill=depth, size=size)) +
theme_void() +
theme(legend.position="FALSE") +
scale_fill_gradientn(colors=colormap)
#scale_fill_viridis()
#-------------------------------------------小案例-----------------------------------
library(ggraph)
library(igraph)
library(dplyr)
df <- data.frame(group=c("root", "root", "a","a","b","b","b"),
subitem=c("a", "b", "x","y","z","u","v"),
size=c(0, 0, 6,2,3,2,5))
# create a dataframe with the vertices' attributes
vertices <- df %>%
distinct(subitem, size) %>%
add_row(subitem = "root", size = 0)
graph <- graph_from_data_frame(df, vertices = vertices)
ggraph(graph, layout = "circlepack", weight = 'size') +
geom_node_circle(aes(fill =depth)) +
# adding geom_text to see which circle is which node
geom_text(aes(x = x, y = y, label = paste(name, "size=", size))) +
coord_fixed()
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(circlize)
library(RColorBrewer)
set.seed(999)
mat = matrix(sample(18, 18), 3, 6)
rownames(mat) = paste0("S", 1:3)
colnames(mat) = paste0("E", 1:6)
df = data.frame(from = rep(rownames(mat), times = ncol(mat)),
to = rep(colnames(mat), each = nrow(mat)),
value = as.vector(mat),
stringsAsFactors = FALSE)
chordDiagram(df,grid.col = brewer.pal(9,"Set1")[1:9],link.border="grey")
circos.clear()
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
#-------------------------------------------------------------------------
library(ggalluvial)
library(ggplot2)
ggplot(as.data.frame(UCBAdmissions),
aes(weight = Freq, axis1 = Gender, axis2 = Dept)) +
geom_alluvium(aes(fill = Admit), alpha=0.7,width = 1/12) +
geom_stratum(width = 1/12) +
geom_text(stat = "stratum", label.strata = TRUE) +
scale_x_continuous(breaks = 1:2, labels = c("Gender", "Dept")) +
#coord_flip() +
theme_void()
data(Refugees, package = "alluvial")
country_regions <- c(
Afghanistan = "Middle East",
Burundi = "Central Africa",
`Congo DRC` = "Central Africa",
Iraq = "Middle East",
Myanmar = "Southeast Asia",
Palestine = "Middle East",
Somalia = "Horn of Africa",
Sudan = "Central Africa",
Syria = "Middle East",
Vietnam = "Southeast Asia"
)
Refugees$region <- country_regions[Refugees$country]
ggplot(data = Refugees,
aes(x = year, weight = refugees, alluvium = country)) +
geom_alluvium(aes(fill = country, colour = country),
alpha = .85, decreasing = FALSE) +
scale_x_continuous(breaks = seq(2003, 2013, 2)) +
#theme(axis.text.x = element_text(angle = -30, hjust = 0)) +
scale_fill_brewer(type = "qual", palette = "Paired") +
scale_color_brewer(type = "qual", palette = "Paired") #+
#theme_void()
# facet_wrap(~ region, scales = "fixed") +
#ggtitle("refugee volume by country and region of origin")
data(majors)
majors$curriculum <- as.factor(majors$curriculum)
ggplot(majors,
aes(x = semester, stratum = curriculum, alluvium = student,
fill = curriculum, label = curriculum)) +
geom_flow(stat = "alluvium", lode.guidance = "rightleft",
color = "darkgray") +
geom_stratum() +
theme(legend.position = "bottom") +
ggtitle("student curricula across several semesters")
data(vaccinations)
levels(vaccinations$response) <- rev(levels(vaccinations$response))
ggplot(vaccinations,
aes(x = survey, stratum = response, alluvium = subject,
weight = freq,
fill = response, label = response)) +
geom_flow(alpha = 0.7,color = "darkgray") +
geom_stratum(alpha = 1) +
geom_text(stat = "stratum", size = 3.5) +
theme_classic()+
#coord_flip() +
theme(legend.position = "none",
axis.text.x =element_text(color="black",size=12),
axis.title.x = element_blank(),
axis.text.y =element_blank(),
axis.line = element_blank(),
axis.ticks =element_blank() )# +
data(majors)
majors$curriculum <- as.factor(majors$curriculum)
ggplot(majors,
aes(x = semester, stratum = curriculum, alluvium = student,
fill = curriculum, label = curriculum)) +
geom_flow(stat = "alluvium", lode.guidance = "rightleft",
color = "darkgray") +
geom_stratum() +
theme(legend.position = "bottom") +
ggtitle("student curricula across several semesters")
library(ggalluvial)
library(ggplot2)
data(vaccinations)
levels(vaccinations$response) <- rev(levels(vaccinations$response))
ggplot(vaccinations,
aes(x = survey, stratum = response, alluvium = subject,
weight = freq,
fill = response, label = response)) +
geom_flow(alpha = 0.7,color = "darkgray") +
geom_stratum(alpha = 1) +
geom_text(stat = "stratum", size = 3.5) +
theme_classic()+
#coord_flip() +
theme(legend.position = "none",
axis.text.x =element_text(color="black",size=12),
axis.title.x = element_blank(),
axis.text.y =element_blank(),
axis.line = element_blank(),
axis.ticks =element_blank() )# +
#ggtitle("vaccination survey responses at three points in time")
#EasyCharts团队出品，如有商用必究，
#如需使用与深入学习，请联系微信：EasyCharts
library(ggplot2)
df<-read.csv("Hist_Density_Data.csv",stringsAsFactors=FALSE)
#--------------------------------------------(a2) 多数剧系列直方图-----------------------------------
ggplot(df, aes(x=MXSPD, fill=Location))+
geom_histogram(binwidth = 1,alpha=0.55,colour="black",size=0.25)+#, aes(fill = ..count..) )
theme(
text=element_text(size=15,color="black"),
plot.title=element_text(size=15,family="myfont",face="bold.italic",hjust=.5,color="black"),#,
legend.position=c(0.8,0.8),
legend.background = element_blank()
)
